-- Create UI Library Class
local UI = {}

function UI.new(title)
    local self = {}
    self.title = title
    self.tabs = {}

    -- Create the ScreenGui
    self.screenGui = Instance.new("ScreenGui")
    self.screenGui.ResetOnSpawn = false
    self.screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Create the window frame
    self.windowFrame = Instance.new("Frame", self.screenGui)
    self.windowFrame.Size = UDim2.new(0.5, 0, 0.5, 0)
    self.windowFrame.Position = UDim2.new(0.25, 0, 0.25, 0)
    self.windowFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30) -- Dark mode background color
    self.windowFrame.BorderSizePixel = 0
    self.windowFrame.ZIndex = 2
    self.windowFrame.Active = true
    self.windowFrame.Draggable = true -- Make the window draggable

    -- Create the top bar
    self.topBar = Instance.new("Frame", self.windowFrame)
    self.topBar.Size = UDim2.new(1, 0, 0, 30)
    self.topBar.Position = UDim2.new(0, 0, 0, 0)
    self.topBar.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode top bar color

    -- Create the title text
    self.titleText = Instance.new("TextLabel", self.topBar)
    self.titleText.Size = UDim2.new(1, 0, 1, 0)
    self.titleText.Position = UDim2.new(0, 5, 0, 0)
    self.titleText.Text = self.title
    self.titleText.TextColor3 = Color3.new(1, 1, 1)
    self.titleText.Font = Enum.Font.SourceSansBold
    self.titleText.TextSize = 14
    self.titleText.TextXAlignment = Enum.TextXAlignment.Left
    self.titleText.BackgroundTransparency = 1
    self.titleText.ZIndex = 3

    -- Create the close button
    self.closeButton = Instance.new("TextButton", self.topBar)
    self.closeButton.Size = UDim2.new(0, 20, 0, 20)
    self.closeButton.Position = UDim2.new(1, -20, 0, 5)
    self.closeButton.Text = "x"
    self.closeButton.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode button color
    self.closeButton.BorderSizePixel = 0
    self.closeButton.TextColor3 = Color3.new(1, 1, 1)
    self.closeButton.Font = Enum.Font.SourceSansBold
    self.closeButton.TextSize = 14
    self.closeButton.ZIndex = 3
    self.closeButton.MouseButton1Click:Connect(function()
        self.screenGui:Destroy() -- Close the window
    end)

    -- Create the tab bar
    self.tabBar = Instance.new("Frame", self.windowFrame)
    self.tabBar.Size = UDim2.new(1, 0, 0, 30)
    self.tabBar.Position = UDim2.new(0, 0, 0, 30)
    self.tabBar.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode tab bar color

    -- Add Tab Method
    function self.addTab(tabTitle)
        local tab = {}
        tab.title = tabTitle
        tab.buttons = {}
        tab.toggles = {}
        tab.textboxes = {}

        -- Create the tab button
        tab.tabButton = Instance.new("TextButton", self.tabBar)
        tab.tabButton.Size = UDim2.new(0, 100, 1, 0)
        tab.tabButton.Position = UDim2.new(0, #self.tabs * 110, 0, 0)
        tab.tabButton.Text = tab.title
        tab.tabButton.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode tab button color
        tab.tabButton.BorderSizePixel = 0
        tab.tabButton.TextColor3 = Color3.new(1, 1, 1)
        tab.tabButton.Font = Enum.Font.SourceSansBold
        tab.tabButton.TextSize = 14
        tab.tabButton.ZIndex = 3
        tab.tabButton.MouseButton1Click:Connect(function()
            -- Switch to this tab
            for _, otherTab in ipairs(self.tabs) do
                otherTab.frame.Visible = false
            end
            tab.frame.Visible = true
        end)

        -- Create the tab frame
        tab.frame = Instance.new("Frame", self.windowFrame)
        tab.frame.Size = UDim2.new(1, 0, 1, -60)
        tab.frame.Position = UDim2.new(0, 0, 0, 60)
        tab.frame.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode frame color
        tab.frame.BorderSizePixel = 0
        tab.frame.ZIndex = 3
        tab.frame.Visible = false

        table.insert(self.tabs, tab)
        return tab
    end

    -- Add Button Method
    function self.addButton(tab, buttonTitle, onClick)
        local button = {}
        button.title = buttonTitle

        -- Create the button
        button.button = Instance.new("TextButton", tab.frame)
        button.button.Size = UDim2.new(0, 100, 0, 30)
        button.button.Position = UDim2.new(0, #tab.buttons * 110, 0, 10)
        button.button.Text = button.title
        button.button.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode button color
        button.button.BorderSizePixel = 0
        button.button.TextColor3 = Color3.new(1, 1, 1)
        button.button.Font = Enum.Font.SourceSansBold
        button.button.TextSize = 14
        button.button.ZIndex = 3
        button.button.MouseButton1Click:Connect(onClick)
        table.insert(tab.buttons, button)
        return button
    end

    -- Add Toggle Method
    function self.addToggle(tab, toggleTitle, onToggle)
        local toggle = {}
        toggle.title = toggleTitle
        toggle.state = false

        -- Create the toggle
        toggle.toggleButton = Instance.new("TextButton", tab.frame)
        toggle.toggleButton.Size = UDim2.new(0, 100, 0, 30)
        toggle.toggleButton.Position = UDim2.new(0, #tab.toggles * 110, 0, 50)
        toggle.toggleButton.Text = toggle.title .. " (Off)"
        toggle.toggleButton.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode toggle button color
        toggle.toggleButton.BorderSizePixel = 0
        toggle.toggleButton.TextColor3 = Color3.new(1, 1, 1)
        toggle.toggleButton.Font = Enum.Font.SourceSansBold
        toggle.toggleButton.TextSize = 14
        toggle.toggleButton.ZIndex = 3
        toggle.toggleButton.MouseButton1Click:Connect(function()
            toggle.state = not toggle.state
            if toggle.state then
                toggle.toggleButton.Text = toggle.title .. " (On)"
            else
                toggle.toggleButton.Text = toggle.title .. " (Off)"
            end
            onToggle(toggle.state)
        end)
        table.insert(tab.toggles, toggle)
        return toggle
    end

-- Add TextBox Method
function self.addTextBox(tab, placeholder, callback)
    local textBox = {}

    -- Create the text box
    textBox.textBox = Instance.new("TextBox", tab.frame)
    textBox.textBox.Size = UDim2.new(0, 200, 0, 30)
    textBox.textBox.Position = UDim2.new(0, #tab.textboxes * 210, 0, 90)
    textBox.textBox.BackgroundTransparency = 0.5
    textBox.textBox.BackgroundColor3 = Color3.fromRGB(38, 38, 38) -- Dark mode text box color
    textBox.textBox.BorderSizePixel = 0
    textBox.textBox.TextColor3 = Color3.new(1, 1, 1)
    textBox.textBox.Font = Enum.Font.SourceSans
    textBox.textBox.TextSize = 14
    textBox.textBox.ZIndex = 3
    textBox.textBox.PlaceholderText = placeholder
    
    -- Add event handler
    textBox.textBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textBox.textBox.Text)
        end
    end)

    table.insert(tab.textboxes, textBox)
    return textBox
end

    return self
end
